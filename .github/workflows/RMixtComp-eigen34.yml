name: RMixtComp with Eigen 3.4

on:
  push:
    branches:
      - master
      - staging
    paths:
      - 'MixtComp/**'
      - '!MixtComp/docs/**'
      - 'RMixtComp/**'
      - 'RMixtCompIO/**'
      - 'RMixtCompUtilities/**'
      - '.github/workflows/RMixtComp-eigen34.yml'
      - '!**/README.md'
  pull_request:
    branches:
      - master
      - staging
    paths:
      - 'MixtComp/**'
      - '!MixtComp/docs/**'
      - 'RMixtComp/**'
      - 'RMixtCompIO/**'
      - 'RMixtCompUtilities/**'
      - '.github/workflows/RMixtComp-eigen34.yml'
      - '!**/README.md'

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest,   r: 'release'}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Query dependencies
        run: |
          install.packages('remotes')
        shell: Rscript {0}

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install RMixtCompIO dependencies
        working-directory: RMixtCompIO
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
          install.packages("RcppEigen", repo="https://RcppCore.github.io/drat")
        shell: Rscript {0}

      - name: Copy MixtComp files
        working-directory: RMixtCompIO
        run: |
          make clean
          make updateLib

      - name: Compile Rcpp Attributes for RMixtCompIO
        working-directory: RMixtCompIO
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: Rcpp::compileAttributes()
        shell: Rscript {0}

      - name: Check RMixtCompIO
        working-directory: RMixtCompIO
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        working-directory: RMixtCompIO
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: RMixtCompIO/check

      - name: Install local RMixtCompIO
        working-directory: RMixtCompIO
        run: R CMD INSTALL --no-multiarch --with-keep.source .

      - name: Install RMixtCompUtilities dependencies
        working-directory: RMixtCompUtilities
        run: remotes::update_packages(setdiff(remotes::local_package_deps(pkgdir = ".", dependencies = TRUE), "RMixtCompIO"))
        shell: Rscript {0}

      - name: Check RMixtCompUtilities
        working-directory: RMixtCompUtilities
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        working-directory: RMixtCompUtilities
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: RMixtCompUtilities/check

      - name: Install local RMixtCompUtilities
        working-directory: RMixtCompUtilities
        run: R CMD INSTALL --no-multiarch --with-keep.source .

      - name: Install RMixtComp dependencies
        working-directory: RMixtComp
        run: remotes::update_packages(setdiff(remotes::local_package_deps(pkgdir = ".", dependencies = TRUE), c("RMixtCompIO", "RMixtCompUtilities")))
        shell: Rscript {0}

      - name: Check RMixtComp
        working-directory: RMixtComp
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        working-directory: RMixtComp
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: RMixtComp/check
