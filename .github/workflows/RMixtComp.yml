name: Test RMixtComp

on:
  push:
    branches:
      - master
      - staging
  pull_request:
    branches:
      - master
      - staging


jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest, r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - uses: r-lib/actions/setup-r@v1
        working-directory: RMixtCompIO
        with:
          use-public-rspm: true
          r-version: ${{ matrix.config.r }}

      - name: Install dependencies
        working-directory: RMixtCompIO
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}


      - name: Copy files
        working-directory: RMixtCompIO
        run: |
          make clean
          make updateLib

      - name: Compile Rcpp Attributes for RMixtCompIO
        working-directory: RMixtCompIO
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: Rcpp::compileAttributes()
        shell: Rscript {0}

      - uses: r-lib/actions/check-r-package@v1
        working-directory: RMixtCompIO

      - name: Show testthat output
        working-directory: RMixtCompIO
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: RMixtCompIO/check